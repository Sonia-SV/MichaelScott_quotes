{"ast":null,"code":"import _slicedToArray from\"/Users/sonia/Documents/Code Work/Rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Switch,Route}from'react-router-dom';import getDataFromApi from'../services/api';import Header from'./Header';import Footer from'./Footer';import Filters from'./Filters';import CharacterList from'./CharacterList';import DetailedCharacter from'./DetailedCharacter';import ErrorURL from'./error/ErrorURL';import ErrorFilter from'./error/ErrorFilter';import AlienAlive from'../img/AlienAlive.png';import AlienDead from'../img/AlienDead.png';import Alienunknown from'../img/Alienunknown.png';import HumanAlive from'../img/HumanAlive.png';import HumanDead from'../img/HumanDead.png';import Humanunknown from'../img/Humanunknown.png';import'../stylesheets/app.scss';getDataFromApi();var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),characters=_useState2[0],setCharacters=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filterName=_useState4[0],setFilterName=_useState4[1];var _useState5=useState('All'),_useState6=_slicedToArray(_useState5,2),filterSpecies=_useState6[0],setFilterSpecies=_useState6[1];var _useState7=useState('All'),_useState8=_slicedToArray(_useState7,2),filterStatus=_useState8[0],setFilterStatus=_useState8[1];useEffect(function(){getDataFromApi().then(function(data){return setCharacters(data.sort(function(a,b){return a.name.toLowerCase().localeCompare(b.name.toLowerCase());}));});},[]);useEffect(function(){var data=JSON.parse(localStorage.getItem('filter'));if(data){setFilterName(data.filterName);setFilterSpecies(data.filterSpecies);setFilterStatus(data.filterStatus);}},[]);useEffect(function(){localStorage.setItem('filter',JSON.stringify({filterName:filterName,filterSpecies:filterSpecies,filterStatus:filterStatus}));});var resetState=function resetState(){setFilterName('');setFilterSpecies('All');setFilterStatus('All');};var handleFilterCharacters=function handleFilterCharacters(data){if(data.key==='name'){setFilterName(data.value);}if(data.key==='reset'){resetState();}if(data.key==='species'){setFilterSpecies(data.value);}if(data.key==='status'){setFilterStatus(data.value);}};var renderStatusIcon=function renderStatusIcon(species,status){if(species==='Human'){if(status==='Alive'){return HumanAlive;}else if(status==='Dead'){return HumanDead;}else{return Humanunknown;}}else if(status==='Alive'){return AlienAlive;}else if(status==='Dead'){return AlienDead;}else{return Alienunknown;}};var renderFilteredCharacters=function renderFilteredCharacters(){return characters.filter(function(character){return character.name.toLowerCase().includes(filterName.toLowerCase());}).filter(function(character){return filterSpecies==='All'?true:character.species===filterSpecies;}).filter(function(character){return filterStatus==='All'?true:character.status===filterStatus;});};var renderFilterResults=/*#__PURE__*/React.createElement(CharacterList,{characters:renderFilteredCharacters(),renderStatusIcon:renderStatusIcon});var renderFilterError=/*#__PURE__*/React.createElement(ErrorFilter,{filterName:filterName,filterSpecies:filterSpecies,filterStatus:filterStatus,handleFilterCharacters:handleFilterCharacters});var renderSearchResult=renderFilteredCharacters().length===0?renderFilterError:renderFilterResults;var renderDetailedCharacter=function renderDetailedCharacter(props){var routeCharacterId=props.match.params.id;var foundCharacter=characters.find(function(character){return character.id===parseInt(routeCharacterId);});if(foundCharacter){return/*#__PURE__*/React.createElement(DetailedCharacter,{name:foundCharacter.name,image:foundCharacter.image,status:foundCharacter.status,species:foundCharacter.species,planet:foundCharacter.planet,episodes:foundCharacter.episodes,renderStatusIcon:renderStatusIcon});}else{return/*#__PURE__*/React.createElement(ErrorURL,null);}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"main\",{className:\"main\"},/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"},/*#__PURE__*/React.createElement(Filters,{handleFilterCharacters:handleFilterCharacters,filterName:filterName,filterSpecies:filterSpecies,filterStatus:filterStatus}),renderSearchResult),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/character/:id\",render:renderDetailedCharacter}))),/*#__PURE__*/React.createElement(Footer,null));};export default App;","map":{"version":3,"sources":["/Users/sonia/Documents/Code Work/Rick-Morty/src/components/App.js"],"names":["React","useEffect","useState","Switch","Route","getDataFromApi","Header","Footer","Filters","CharacterList","DetailedCharacter","ErrorURL","ErrorFilter","AlienAlive","AlienDead","Alienunknown","HumanAlive","HumanDead","Humanunknown","App","characters","setCharacters","filterName","setFilterName","filterSpecies","setFilterSpecies","filterStatus","setFilterStatus","then","data","sort","a","b","name","toLowerCase","localeCompare","JSON","parse","localStorage","getItem","setItem","stringify","resetState","handleFilterCharacters","key","value","renderStatusIcon","species","status","renderFilteredCharacters","filter","character","includes","renderFilterResults","renderFilterError","renderSearchResult","length","renderDetailedCharacter","props","routeCharacterId","match","params","id","foundCharacter","find","parseInt","image","planet","episodes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport getDataFromApi from '../services/api';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport DetailedCharacter from './DetailedCharacter';\nimport ErrorURL from './error/ErrorURL';\nimport ErrorFilter from './error/ErrorFilter';\nimport AlienAlive from '../img/AlienAlive.png';\nimport AlienDead from '../img/AlienDead.png';\nimport Alienunknown from '../img/Alienunknown.png';\nimport HumanAlive from '../img/HumanAlive.png';\nimport HumanDead from '../img/HumanDead.png';\nimport Humanunknown from '../img/Humanunknown.png';\nimport '../stylesheets/app.scss';\n\ngetDataFromApi();\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecies, setFilterSpecies] = useState('All');\n  const [filterStatus, setFilterStatus] = useState('All');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('filter'));\n    if (data) {\n      setFilterName(data.filterName);\n      setFilterSpecies(data.filterSpecies);\n      setFilterStatus(data.filterStatus);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('filter', JSON.stringify({ filterName, filterSpecies, filterStatus }));\n  });\n\n  const resetState = () => {\n    setFilterName('');\n    setFilterSpecies('All');\n    setFilterStatus('All');\n  };\n\n  const handleFilterCharacters = (data) => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.key === 'reset') {\n      resetState();\n    }\n    if (data.key === 'species') {\n      setFilterSpecies(data.value);\n    }\n    if (data.key === 'status') {\n      setFilterStatus(data.value);\n    }\n  };\n\n  const renderStatusIcon = (species, status) => {\n    if (species === 'Human') {\n      if (status === 'Alive') {\n        return HumanAlive;\n      } else if (status === 'Dead') {\n        return HumanDead;\n      } else {\n        return Humanunknown;\n      }\n    } else if (status === 'Alive') {\n      return AlienAlive;\n    } else if (status === 'Dead') {\n      return AlienDead;\n    } else {\n      return Alienunknown;\n    }\n  };\n  const renderFilteredCharacters = () => {\n    return characters\n      .filter((character) => {\n        return character.name.toLowerCase().includes(filterName.toLowerCase());\n      })\n      .filter((character) => {\n        return filterSpecies === 'All' ? true : character.species === filterSpecies;\n      })\n      .filter((character) => {\n        return filterStatus === 'All' ? true : character.status === filterStatus;\n      });\n  };\n\n  const renderFilterResults = <CharacterList characters={renderFilteredCharacters()} renderStatusIcon={renderStatusIcon} />;\n\n  const renderFilterError = (\n    <ErrorFilter filterName={filterName} filterSpecies={filterSpecies} filterStatus={filterStatus} handleFilterCharacters={handleFilterCharacters} />\n  );\n\n  const renderSearchResult = renderFilteredCharacters().length === 0 ? renderFilterError : renderFilterResults;\n\n  const renderDetailedCharacter = (props) => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => character.id === parseInt(routeCharacterId));\n    if (foundCharacter) {\n      return (\n        <DetailedCharacter\n          name={foundCharacter.name}\n          image={foundCharacter.image}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          planet={foundCharacter.planet}\n          episodes={foundCharacter.episodes}\n          renderStatusIcon={renderStatusIcon}\n        />\n      );\n    } else {\n      return <ErrorURL />;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main className=\"main\">\n        <Route exact path=\"/\">\n          <Filters\n            handleFilterCharacters={handleFilterCharacters}\n            filterName={filterName}\n            filterSpecies={filterSpecies}\n            filterStatus={filterStatus}\n          />\n          {renderSearchResult}\n        </Route>\n        <Switch>\n          <Route exact path=\"/character/:id\" render={renderDetailedCharacter} />\n        </Switch>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}