{"ast":null,"code":"const getDataFromApi = filterName => {\n  if (filterName !== undefined) {\n    return fetch('https://rickandmortyapi.com/api/character/?name=' + filterName).then(response => response.json().then(data => {\n      if (data.length > 0) {\n        return data.results.map(character => {\n          return {\n            id: character.id,\n            image: character.image,\n            name: character.name,\n            species: character.species,\n            speciesType: character.type,\n            planet: character.origin.name,\n            episodes: character.episode.length,\n            status: character.status,\n            gender: character.gender\n          };\n        });\n      }\n    }));\n  }\n};\n\nexport default getDataFromApi;","map":{"version":3,"sources":["/Users/sonia/Documents/Code Work/Rick-Morty/src/services/api.js"],"names":["getDataFromApi","filterName","undefined","fetch","then","response","json","data","length","results","map","character","id","image","name","species","speciesType","type","planet","origin","episodes","episode","status","gender"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,UAAD,IAAgB;AACrC,MAAIA,UAAU,KAAKC,SAAnB,EAA8B;AAC5B,WAAOC,KAAK,CAAC,qDAAqDF,UAAtD,CAAL,CAAuEG,IAAvE,CAA6EC,QAAD,IACjFA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,eAAOD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACrC,iBAAO;AACLC,YAAAA,EAAE,EAAED,SAAS,CAACC,EADT;AAELC,YAAAA,KAAK,EAAEF,SAAS,CAACE,KAFZ;AAGLC,YAAAA,IAAI,EAAEH,SAAS,CAACG,IAHX;AAILC,YAAAA,OAAO,EAAEJ,SAAS,CAACI,OAJd;AAKLC,YAAAA,WAAW,EAAEL,SAAS,CAACM,IALlB;AAMLC,YAAAA,MAAM,EAAEP,SAAS,CAACQ,MAAV,CAAiBL,IANpB;AAOLM,YAAAA,QAAQ,EAAET,SAAS,CAACU,OAAV,CAAkBb,MAPvB;AAQLc,YAAAA,MAAM,EAAEX,SAAS,CAACW,MARb;AASLC,YAAAA,MAAM,EAAEZ,SAAS,CAACY;AATb,WAAP;AAWD,SAZM,CAAP;AAaD;AACF,KAhBD,CADK,CAAP;AAmBD;AACF,CAtBD;;AAwBA,eAAevB,cAAf","sourcesContent":["const getDataFromApi = (filterName) => {\n  if (filterName !== undefined) {\n    return fetch('https://rickandmortyapi.com/api/character/?name=' + filterName).then((response) =>\n      response.json().then((data) => {\n        if (data.length > 0) {\n          return data.results.map((character) => {\n            return {\n              id: character.id,\n              image: character.image,\n              name: character.name,\n              species: character.species,\n              speciesType: character.type,\n              planet: character.origin.name,\n              episodes: character.episode.length,\n              status: character.status,\n              gender: character.gender,\n            };\n          });\n        }\n      })\n    );\n  }\n};\n\nexport default getDataFromApi;\n"]},"metadata":{},"sourceType":"module"}