{"ast":null,"code":"var _jsxFileName = \"/Users/sonia/Documents/Code Work/Rick-Morty/src/components/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport getDataFromApi from '../services/api';\nimport localStorage from '../../services/localStorage.js';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport DetailedCharacter from './DetailedCharacter';\nimport ErrorURL from './error/ErrorURL';\nimport ErrorFilter from './error/ErrorFilter';\nimport AlienAlive from '../img/AlienAlive.png';\nimport AlienDead from '../img/AlienDead.png';\nimport Alienunknown from '../img/Alienunknown.png';\nimport HumanAlive from '../img/HumanAlive.png';\nimport HumanDead from '../img/HumanDead.png';\nimport Humanunknown from '../img/Humanunknown.png';\nimport '../stylesheets/app.scss';\ngetDataFromApi();\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecies, setFilterSpecies] = useState('All');\n  const [filterStatus, setFilterStatus] = useState('All');\n  useEffect(() => {\n    getDataFromApi().then(data => setCharacters(data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('filter'));\n\n    if (data) {\n      setFilterName(data);\n      setFilterStatus(data);\n      setFilterSpecies(data);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('filter', JSON.stringify(filterName, filterSpecies, filterStatus));\n  });\n\n  const handleFilterCharacters = data => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    }\n\n    if (data.key === 'reset') {\n      setFilterName('');\n      setFilterSpecies('All');\n      setFilterStatus('All');\n    }\n\n    if (data.key === 'species') {\n      setFilterSpecies(data.value);\n    }\n\n    if (data.key === 'status') {\n      setFilterStatus(data.value);\n    }\n  };\n\n  const renderStatusIcon = (species, status) => {\n    if (species === 'Human') {\n      if (status === 'Alive') {\n        return HumanAlive;\n      } else if (status === 'Dead') {\n        return HumanDead;\n      } else {\n        return Humanunknown;\n      }\n    } else if (status === 'Alive') {\n      return AlienAlive;\n    } else if (status === 'Dead') {\n      return AlienDead;\n    } else {\n      return Alienunknown;\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter(character => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    }).filter(character => {\n      return filterSpecies === 'All' ? true : character.species === filterSpecies;\n    }).filter(character => {\n      return filterStatus === 'All' ? true : character.status === filterStatus;\n    });\n  };\n\n  const renderFilterResults = /*#__PURE__*/React.createElement(CharacterList, {\n    characters: renderFilteredCharacters(),\n    renderStatusIcon: renderStatusIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 31\n    }\n  });\n  const renderFilterError = /*#__PURE__*/React.createElement(ErrorFilter, {\n    filterName: filterName,\n    filterSpecies: filterSpecies,\n    filterStatus: filterStatus,\n    handleFilterCharacters: handleFilterCharacters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  });\n  const renderSearchResult = renderFilteredCharacters().length === 0 ? renderFilterError : renderFilterResults;\n\n  const renderDetailedCharacter = props => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find(character => character.id === parseInt(routeCharacterId));\n\n    if (foundCharacter) {\n      return /*#__PURE__*/React.createElement(DetailedCharacter, {\n        name: foundCharacter.name,\n        image: foundCharacter.image,\n        status: foundCharacter.status,\n        species: foundCharacter.species,\n        planet: foundCharacter.planet,\n        episodes: foundCharacter.episodes,\n        renderStatusIcon: renderStatusIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ErrorURL, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Filters, {\n    handleFilterCharacters: handleFilterCharacters,\n    filterName: filterName,\n    filterSpecies: filterSpecies,\n    filterStatus: filterStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), renderSearchResult), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/character/:id\",\n    render: renderDetailedCharacter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sonia/Documents/Code Work/Rick-Morty/src/components/App.js"],"names":["React","useEffect","useState","Switch","Route","getDataFromApi","localStorage","Header","Footer","Filters","CharacterList","DetailedCharacter","ErrorURL","ErrorFilter","AlienAlive","AlienDead","Alienunknown","HumanAlive","HumanDead","Humanunknown","App","characters","setCharacters","filterName","setFilterName","filterSpecies","setFilterSpecies","filterStatus","setFilterStatus","then","data","sort","a","b","name","toLowerCase","localeCompare","JSON","parse","getItem","setItem","stringify","handleFilterCharacters","key","value","renderStatusIcon","species","status","renderFilteredCharacters","filter","character","includes","renderFilterResults","renderFilterError","renderSearchResult","length","renderDetailedCharacter","props","routeCharacterId","match","params","id","foundCharacter","find","parseInt","image","planet","episodes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport getDataFromApi from '../services/api';\nimport localStorage from '../../services/localStorage.js';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport DetailedCharacter from './DetailedCharacter';\nimport ErrorURL from './error/ErrorURL';\nimport ErrorFilter from './error/ErrorFilter';\nimport AlienAlive from '../img/AlienAlive.png';\nimport AlienDead from '../img/AlienDead.png';\nimport Alienunknown from '../img/Alienunknown.png';\nimport HumanAlive from '../img/HumanAlive.png';\nimport HumanDead from '../img/HumanDead.png';\nimport Humanunknown from '../img/Humanunknown.png';\nimport '../stylesheets/app.scss';\n\ngetDataFromApi();\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecies, setFilterSpecies] = useState('All');\n  const [filterStatus, setFilterStatus] = useState('All');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('filter'));\n    if (data) {\n      setFilterName(data);\n      setFilterStatus(data);\n      setFilterSpecies(data);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('filter', JSON.stringify(filterName, filterSpecies, filterStatus));\n  });\n\n  const handleFilterCharacters = (data) => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.key === 'reset') {\n      setFilterName('');\n      setFilterSpecies('All');\n      setFilterStatus('All');\n    }\n    if (data.key === 'species') {\n      setFilterSpecies(data.value);\n    }\n    if (data.key === 'status') {\n      setFilterStatus(data.value);\n    }\n  };\n\n  const renderStatusIcon = (species, status) => {\n    if (species === 'Human') {\n      if (status === 'Alive') {\n        return HumanAlive;\n      } else if (status === 'Dead') {\n        return HumanDead;\n      } else {\n        return Humanunknown;\n      }\n    } else if (status === 'Alive') {\n      return AlienAlive;\n    } else if (status === 'Dead') {\n      return AlienDead;\n    } else {\n      return Alienunknown;\n    }\n  };\n  const renderFilteredCharacters = () => {\n    return characters\n      .filter((character) => {\n        return character.name.toLowerCase().includes(filterName.toLowerCase());\n      })\n      .filter((character) => {\n        return filterSpecies === 'All' ? true : character.species === filterSpecies;\n      })\n      .filter((character) => {\n        return filterStatus === 'All' ? true : character.status === filterStatus;\n      });\n  };\n\n  const renderFilterResults = <CharacterList characters={renderFilteredCharacters()} renderStatusIcon={renderStatusIcon} />;\n\n  const renderFilterError = (\n    <ErrorFilter filterName={filterName} filterSpecies={filterSpecies} filterStatus={filterStatus} handleFilterCharacters={handleFilterCharacters} />\n  );\n\n  const renderSearchResult = renderFilteredCharacters().length === 0 ? renderFilterError : renderFilterResults;\n\n  const renderDetailedCharacter = (props) => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => character.id === parseInt(routeCharacterId));\n    if (foundCharacter) {\n      return (\n        <DetailedCharacter\n          name={foundCharacter.name}\n          image={foundCharacter.image}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          planet={foundCharacter.planet}\n          episodes={foundCharacter.episodes}\n          renderStatusIcon={renderStatusIcon}\n        />\n      );\n    } else {\n      return <ErrorURL />;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main className=\"main\">\n        <Route exact path=\"/\">\n          <Filters\n            handleFilterCharacters={handleFilterCharacters}\n            filterName={filterName}\n            filterSpecies={filterSpecies}\n            filterStatus={filterStatus}\n          />\n          {renderSearchResult}\n        </Route>\n        <Switch>\n          <Route exact path=\"/character/:id\" render={renderDetailedCharacter} />\n        </Switch>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}