{"ast":null,"code":"import React from'react';import'../stylesheets/layout/filters.scss';var Filters=function Filters(props){var handleSearch=function handleSearch(event){event.preventDefault();props.handleFilterCharacters({key:event.currentTarget.id,value:event.currentTarget.value});};return/*#__PURE__*/React.createElement(\"form\",{className:\"filters\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\",className:\"filters__label\"},/*#__PURE__*/React.createElement(\"span\",{className:\"filters__name\"},\"Search by name: \"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",type:\"text\",maxLength:\"10\",onChange:handleSearch,className:\"filters__input\",value:props.filterName})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"species\",className:\"filters__label\"},/*#__PURE__*/React.createElement(\"span\",{className:\"filters__name\"},\" Search by species: \"),/*#__PURE__*/React.createElement(\"select\",{id:\"species\",value:props.filterSpecies,className:\"filters__input\",onChange:handleSearch},/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Human\"},\"Human\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Alien\"},\"Alien\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"species\",className:\"filters__label\"},/*#__PURE__*/React.createElement(\"span\",{className:\"filters__name\"},\" Search by status: \"),/*#__PURE__*/React.createElement(\"select\",{id:\"status\",value:props.filterStatus,className:\"filters__input\",onChange:handleSearch},/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Dead\"},\"Dead\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Alive\"},\"Alive\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Unknown\"},\"Unknown\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"rest\",className:\"filters__label\"},/*#__PURE__*/React.createElement(\"span\",{className:\"filters__name\"},\" Clear: \"),/*#__PURE__*/React.createElement(\"button\",{id:\"reset\",className:\"filters__input filters__button\",onClick:handleSearch},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-ban\"}))));};export default Filters;","map":{"version":3,"sources":["/Users/sonia/Documents/Code Work/Rick-Morty/src/components/Filters.js"],"names":["React","Filters","props","handleSearch","event","preventDefault","handleFilterCharacters","key","currentTarget","id","value","filterName","filterSpecies","filterStatus"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,oCAAP,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACAH,KAAK,CAACI,sBAAN,CAA6B,CAC3BC,GAAG,CAAEH,KAAK,CAACI,aAAN,CAAoBC,EADE,CAE3BC,KAAK,CAAEN,KAAK,CAACI,aAAN,CAAoBE,KAFA,CAA7B,EAID,CAND,CAOA,mBACE,4BAAM,SAAS,CAAC,SAAhB,eACE,6BAAO,OAAO,CAAC,MAAf,CAAsB,SAAS,CAAC,gBAAhC,eACE,4BAAM,SAAS,CAAC,eAAhB,qBADF,cAEE,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,SAAS,CAAC,IAAvC,CAA4C,QAAQ,CAAEP,YAAtD,CAAoE,SAAS,CAAC,gBAA9E,CAA+F,KAAK,CAAED,KAAK,CAACS,UAA5G,EAFF,CADF,cAKE,6BAAO,OAAO,CAAC,SAAf,CAAyB,SAAS,CAAC,gBAAnC,eACE,4BAAM,SAAS,CAAC,eAAhB,yBADF,cAGE,8BAAQ,EAAE,CAAC,SAAX,CAAqB,KAAK,CAAET,KAAK,CAACU,aAAlC,CAAiD,SAAS,CAAC,gBAA3D,CAA4E,QAAQ,CAAET,YAAtF,eACE,8BAAQ,KAAK,CAAC,KAAd,QADF,cAEE,8BAAQ,KAAK,CAAC,OAAd,UAFF,cAGE,8BAAQ,KAAK,CAAC,OAAd,UAHF,CAHF,CALF,cAgBE,6BAAO,OAAO,CAAC,SAAf,CAAyB,SAAS,CAAC,gBAAnC,eACE,4BAAM,SAAS,CAAC,eAAhB,wBADF,cAGE,8BAAQ,EAAE,CAAC,QAAX,CAAoB,KAAK,CAAED,KAAK,CAACW,YAAjC,CAA+C,SAAS,CAAC,gBAAzD,CAA0E,QAAQ,CAAEV,YAApF,eACE,8BAAQ,KAAK,CAAC,KAAd,QADF,cAEE,8BAAQ,KAAK,CAAC,MAAd,SAFF,cAGE,8BAAQ,KAAK,CAAC,OAAd,UAHF,cAIE,8BAAQ,KAAK,CAAC,SAAd,YAJF,CAHF,CAhBF,cA0BE,6BAAO,OAAO,CAAC,MAAf,CAAsB,SAAS,CAAC,gBAAhC,eACE,4BAAM,SAAS,CAAC,eAAhB,aADF,cAEE,8BAAQ,EAAE,CAAC,OAAX,CAAmB,SAAS,CAAC,gCAA7B,CAA8D,OAAO,CAAEA,YAAvE,eACE,yBAAG,SAAS,CAAC,YAAb,EADF,CAFF,CA1BF,CADF,CAmCD,CA3CD,CA6CA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/filters.scss';\n\nconst Filters = (props) => {\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.handleFilterCharacters({\n      key: event.currentTarget.id,\n      value: event.currentTarget.value,\n    });\n  };\n  return (\n    <form className=\"filters\">\n      <label htmlFor=\"name\" className=\"filters__label\">\n        <span className=\"filters__name\">Search by name: </span>\n        <input id=\"name\" type=\"text\" maxLength=\"10\" onChange={handleSearch} className=\"filters__input\" value={props.filterName} />\n      </label>\n      <label htmlFor=\"species\" className=\"filters__label\">\n        <span className=\"filters__name\"> Search by species: </span>\n\n        <select id=\"species\" value={props.filterSpecies} className=\"filters__input\" onChange={handleSearch}>\n          <option value=\"All\">All</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Alien\">Alien</option>\n          {/* <option value=\"Humanoid\">Humanoid</option>\n          <option value=\"Unknown\">Unknown</option> */}\n        </select>\n      </label>\n      <label htmlFor=\"species\" className=\"filters__label\">\n        <span className=\"filters__name\"> Search by status: </span>\n\n        <select id=\"status\" value={props.filterStatus} className=\"filters__input\" onChange={handleSearch}>\n          <option value=\"All\">All</option>\n          <option value=\"Dead\">Dead</option>\n          <option value=\"Alive\">Alive</option>\n          <option value=\"Unknown\">Unknown</option>\n        </select>\n      </label>\n      <label htmlFor=\"rest\" className=\"filters__label\">\n        <span className=\"filters__name\"> Clear: </span>\n        <button id=\"reset\" className=\"filters__input filters__button\" onClick={handleSearch}>\n          <i className=\"fas fa-ban\"></i>\n        </button>\n      </label>\n    </form>\n  );\n};\n\nexport default Filters;\n\nFilters.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterCharacters: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}